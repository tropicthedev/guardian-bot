/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const ServersLazyImport = createFileRoute('/servers')()
const PlayersLazyImport = createFileRoute('/players')()
const InterviewsLazyImport = createFileRoute('/interviews')()
const ApplicationsLazyImport = createFileRoute('/applications')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const ServersLazyRoute = ServersLazyImport.update({
  path: '/servers',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/servers.lazy').then((d) => d.Route))

const PlayersLazyRoute = PlayersLazyImport.update({
  path: '/players',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/players.lazy').then((d) => d.Route))

const InterviewsLazyRoute = InterviewsLazyImport.update({
  path: '/interviews',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/interviews.lazy').then((d) => d.Route))

const ApplicationsLazyRoute = ApplicationsLazyImport.update({
  path: '/applications',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/applications.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/applications': {
      id: '/applications'
      path: '/applications'
      fullPath: '/applications'
      preLoaderRoute: typeof ApplicationsLazyImport
      parentRoute: typeof rootRoute
    }
    '/interviews': {
      id: '/interviews'
      path: '/interviews'
      fullPath: '/interviews'
      preLoaderRoute: typeof InterviewsLazyImport
      parentRoute: typeof rootRoute
    }
    '/players': {
      id: '/players'
      path: '/players'
      fullPath: '/players'
      preLoaderRoute: typeof PlayersLazyImport
      parentRoute: typeof rootRoute
    }
    '/servers': {
      id: '/servers'
      path: '/servers'
      fullPath: '/servers'
      preLoaderRoute: typeof ServersLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  ApplicationsLazyRoute,
  InterviewsLazyRoute,
  PlayersLazyRoute,
  ServersLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/applications",
        "/interviews",
        "/players",
        "/servers"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/applications": {
      "filePath": "applications.lazy.tsx"
    },
    "/interviews": {
      "filePath": "interviews.lazy.tsx"
    },
    "/players": {
      "filePath": "players.lazy.tsx"
    },
    "/servers": {
      "filePath": "servers.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
